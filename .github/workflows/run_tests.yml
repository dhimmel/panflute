# Documentation:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions

# Available software:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners

# Useful info:
# https://stackoverflow.com/a/57549440/3977107

# Pandoc info:
# https://github.com/pandoc/dockerfiles#available-images
# https://github.com/leolabs/bachelor/blob/master/.github/workflows/main.yml
# https://github.com/maxheld83/pandoc/blob/master/.github/workflows/main.yml

name: CI Tests
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        # see setup.py for supported versions
        python-version: [3.6, 3.7, 3.8, 3.9, pypy3]
        # should test sparingly across API breaking boundaries
        pandoc-version:
          # panflute only support at or above this
          - 2.7.3
          # no major API change between 2.7 to 2.9
          # - 2.8.1
          - 2.9.2.1
          # as of writing, panflute only support pandoc<= 2.9. But GitHub workflow does not support "allow failure" yet. See https://github.com/actions/toolkit/issues/399
          # 2.10 has breaking change
          - 2.10.1
          # 2.11 has minor breaking change, fixing some quirks in 2.10
          # - 2.11.1
          - latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[dev]"
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./panflute --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./panflute --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Download Pandoc
      run: |
        downloadUrl=$(python -c 'import requests, sys; v = sys.argv[1]; url = "https://api.github.com/repos/jgm/pandoc/releases/" + ("" if v == "latest" else "tags/") + v; print(next(i["browser_download_url"] for i in requests.get(url).json()["assets"] if i["name"][-3:] == "deb"))' ${{ matrix.pandoc-version }})
        wget $downloadUrl
        sudo dpkg -i ${downloadUrl##*/}
        pandoc --version
    - name: Test with pytest
      run: pytest
    - name: Test by running existing filters
      run: |
       mkdir -p $HOME/.pandoc/filters
       find ./examples/panflute ./docs/source/_static -iname '*.py' -exec cp {} $HOME/.pandoc/filters/ \;
       find . -iname '*.md' -print0 | xargs -0 -i -n1 -P4 bash -c 'pandoc -t native -F panflute -o $0.native $0' {}

# put filters in $DATADIR for panflute's autofilter
# running all available .md files through panflute
